#!/usr/bin/env ruby
require 'date'

arguments = ARGV

def exit_with_help_message
  puts "I'd cheer for you, if only I knew who you were :(\nTry again with `./cheers.rb [Name] [MM/DD Birthday]`"
  exit
end

exit_with_help_message if arguments.empty?

if arguments.length == 1
  name = arguments[0]
  birthday = ""
else
  name = arguments[0]
  birthday = arguments[1]
  begin
    Date.parse(birthday)
  rescue
    exit_with_help_message
  end
end

$cheer_name = name.upcase.gsub(/[^A-Z]/, '')

exit_with_help_message if $cheer_name.empty?


def name_parser(name)
  print_name = name
  an_letters = "AEFHILMNORSX"
  $cheer_name.each_char do |letter|
    article = an_letters.include?(letter) ? "an" : "a"
    print "Give me #{article}... #{letter}\n"
  end
  print print_name + "'s just GRAND!\n"
end

def date_parser(bd)
  date = bd.gsub(/\//, '')
  if /[a-zA-Z\W]/.match(date) or date.length > 4
    true
  end
end

def date_finder(bd)
  birthday = Date.parse(bd)
  now_date_object = DateTime.now
  current_date = now_date_object.month.to_s << '/' << now_date_object.day.to_s
  today = Date.parse(current_date)

  if (birthday - today) < 0
    days_away = (birthday - today).to_s.sub(/-/, '').to_i
    puts "\nAwesome! Your birthday was #{days_away} days ago! Happy belated birthday!"
  elsif (birthday - today) > 0
    days_away = (birthday - today).to_i
    puts "\nAwesome! Your birthday is in #{days_away} days! Happy Birthday in advance!"
  else
    puts "\nAwesome! Your birthday is today! Happy birthday!"
  end
end

exit_with_help_message if date_parser(birthday)

name_parser(name)
if birthday != ""
  date_finder(birthday)
else
  puts "\nI would wish you a Happy Birthday, if I knew when that was!"
end

